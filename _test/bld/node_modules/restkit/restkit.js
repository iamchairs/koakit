"use strict";
const route_1 = require('./route');
const error_1 = require('./error');
class Restkit {
    static initDefaultRestkitConfig(config) {
        this.config = config;
        config.port = config.port || 8000;
        config.compression = !!config.compression;
        config.timezone = config.timezone || 'Z';
        config.staticFiles = config.staticFiles || [];
        config.staticPaths = config.staticPaths || [];
        this.server = config.server;
        config.middleware = config.middleware || [];
    }
    static start(config) {
        return new Promise((resolve, reject) => {
            this.initDefaultRestkitConfig(config);
            process.env.TZ = config.timezone;
            config.middleware.forEach((middleware) => {
                this.server.use(middleware);
            });
            route_1.RouteManager.bindStaticPaths(this.server, config.staticPaths);
            route_1.RouteManager.bindStaticFiles(this.server, config.staticFiles);
            route_1.RouteManager.bindRoutes(this.server);
            this.server.listen(config.port, () => {
                console.log(`Started server on port ${config.port}`);
                resolve();
            });
        }).catch((err) => {
            error_1.fatal(err);
        });
    }
    static stop() {
        console.log('closed application');
        this.server.close();
    }
}
exports.Restkit = Restkit;
